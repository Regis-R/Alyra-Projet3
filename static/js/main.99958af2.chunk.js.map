{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Voting/NoticeNoArtifact.jsx","components/Voting/NoticeWrongNetwork.jsx","components/DOM/InitDOM.jsx","components/DOM/Tableau.jsx","components/Voting/Contract.jsx","components/Voting/Ident.jsx","components/Voting/index.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","NoticeNoArtifact","NoticeWrongNetwork","InitDOM","UserCod","StatusCod","document","getElementById","style","visibility","getElementsByTagName","parseInt","OnlyOneInitVoters","OnlyOneInitProposalsId","OnlyOneInitProposalsTxt","OnlyOneInitVoted","VotersLigneEnCours","ProposalsLigneEnCours","InitVoters","lstVoter","length","ligne","querySelector","i","appendChild","cloneNode","rows","cells","innerHTML","InitVoted","lstVoted","j","InitProposalsId","lstProposals","InitProposalsTxt","AjoutVoterTableau","newAddr","AjoutTableauProposal","newProposal","WinnerSelect","resultats","winnerId","nbVotes","background","ident","titre","userCod","useState","statusId","setStatusId","statusTxt","setStatusTxt","newVoter","setnewVoter","setnewProposal","nextstatus","methods","startProposalsRegistering","send","from","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","location","reload","writevoter","addVoter","writeproposal","addProposal","vote","VoteProposalId","setVote","laststatus","getPastEvents","fromBlock","toBlock","oldStatus","oldiesStatus","event","push","returnValues","newStatus","oldVoters","oldiesVoter","voterAddress","oldVoted","oldiesVoted","voter","proposalId","oldProposals","oldiesProposals","user","textContent","getOneProposal","call","proposal","id","className","onClick","placeholder","onChange","test","target","width","Ident","setIdent","setTitre","setUserCod","whoAreYou","getVoter","log","Voting","App","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.99958af2.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        let web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);  \n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n        init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n\n  }, [init, state.artifact]);\n\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","function NoticeNoArtifact() {\n  return (\n    <p>Connection à Métamask...</p>\n  );\n}\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one you deployed to.\n    </p>\n  );\n}\nexport default NoticeWrongNetwork;\n","function InitDOM(UserCod, StatusCod) {\n    document.getElementById('status').style.visibility = \"hidden\";\n    document.getElementById('statusbtn').style.visibility = \"hidden\";\n    document.getElementById('watch').style.visibility = \"hidden\";\n    document.getElementsByTagName('col')[2].style.visibility = 'collapse';\n    document.getElementsByTagName('col')[3].style.visibility = 'collapse';\n    document.getElementsByTagName('col')[4].style.visibility = 'collapse';\n    document.getElementById('admin').style.visibility = \"hidden\";\n    document.getElementById('proposal').style.visibility = \"hidden\";\n\n    if(UserCod !== 0) {\n        switch(UserCod){\n            case 1 :\n                if(parseInt(StatusCod) === 0) {document.getElementById('admin').style.visibility = \"visible\"};\n                document.getElementById('statusbtn').style.visibility = \"visible\";\n                break;\n            case 2 :\n                if(parseInt(StatusCod) === 0) {document.getElementById('admin').style.visibility = \"visible\"};\n                if(parseInt(StatusCod) === 1) {document.getElementById('proposal').style.visibility = \"visible\"};\n                if(parseInt(StatusCod) === 3) {document.getElementsByTagName('col')[4].style.visibility = ''};\n                if(parseInt(StatusCod) !== 5) {document.getElementById('statusbtn').style.visibility = \"visible\"};\n                document.getElementsByTagName('col')[2].style.visibility = '';\n                document.getElementsByTagName('col')[3].style.visibility = '';\n                break;\n            case 3  :\n                if(parseInt(StatusCod) === 1) {document.getElementById('proposal').style.visibility = \"visible\"};\n                if(parseInt(StatusCod) === 3) {document.getElementsByTagName('col')[4].style.visibility = ''};\n                document.getElementsByTagName('col')[2].style.visibility = '';\n                document.getElementsByTagName('col')[3].style.visibility = '';\n                break;\n            case 4  :\n                break;\n            default :\n                break;\n        };\n        if(UserCod !== 4) {\n            document.getElementById('status').style.visibility = \"visible\";\n            document.getElementById('watch').style.visibility = \"visible\";\n        };\n        document.getElementById('titre').style.visibility = \"visible\";\n    };\n}\nexport default InitDOM;\n","let OnlyOneInitVoters = false;\nlet OnlyOneInitProposalsId = false;\nlet OnlyOneInitProposalsTxt = false;\nlet OnlyOneInitVoted = false;\nlet VotersLigneEnCours = 1;\nlet ProposalsLigneEnCours = 1;\n\nexport function InitVoters(lstVoter) {\n  if(lstVoter.length > 0 && OnlyOneInitVoters === false) {\n    try{\n      let ligne = document.querySelector('#whiteliste tbody tr');\n      for( let i = 0; i < lstVoter.length; i++){\n        if(i > 0) {\n          document.getElementById('whiteliste').appendChild(ligne.cloneNode(\"true\"))\n        };\n      };\n      for( let i = 0; i < lstVoter.length; i++){\n        document.getElementById('whiteliste').rows[i + 1].cells[0].innerHTML = lstVoter[i];\n      };\n      VotersLigneEnCours += lstVoter.length;\n      OnlyOneInitVoters = true;\n    }\n    catch (err) {}\n  }\n};\n\nexport function InitVoted(lstVoted) {\n  if(lstVoted.length > 0 && OnlyOneInitVoted === false) {\n    let i = 0;\n    do {\n      //Recherche l'adresse dans le tableau lstVoted[i]\n      let trouve = false;\n      let j = 1;\n      while(trouve === false) {\n        if(document.getElementById('whiteliste').rows[j].cells[0].innerHTML === lstVoted[i]){\n          document.getElementById('whiteliste').rows[j].cells[1].innerHTML = lstVoted[i + 1];\n          break;\n        }\n        j = j + 1;\n      };\n      i = i + 2;\n    } while(i < lstVoted.length);\n    OnlyOneInitVoted = true;\n  }\n};\n\nexport function InitProposalsId(lstProposals) {\n  if(lstProposals.length > 0 && OnlyOneInitProposalsId === false) {\n    try{\n      for( let i = 0; i < lstProposals.length; i++){      \n        document.getElementById('whiteliste').rows[i + 1].cells[3].innerHTML = lstProposals[i];\n      }\n      ProposalsLigneEnCours += lstProposals.length;\n      OnlyOneInitProposalsId = true;\n    }\n    catch (err) {}\n  }\n};\n\nexport function InitProposalsTxt(lstProposals) {\n  if(lstProposals.length > 0 && OnlyOneInitProposalsTxt === false) {\n    try{\n      for( let i = 0; i < lstProposals.length; i++){      \n        document.getElementById('whiteliste').rows[i + 1].cells[2].innerHTML = lstProposals[i];\n      }\n      OnlyOneInitProposalsTxt = true;\n    }\n    catch (err) {}\n  }\n};\n\nexport function AjoutVoterTableau(newAddr) {\n    //Ajout du nouveau votant dans la liste\n    let ligne = document.querySelector('#whiteliste tbody tr');\n    if(VotersLigneEnCours > 1) {document.getElementById('whiteliste').appendChild(ligne.cloneNode(\"true\"))};\n    document.getElementById('whiteliste').rows[VotersLigneEnCours].cells[0].innerHTML = newAddr;\n    VotersLigneEnCours += 1;\n};\n\nexport function AjoutTableauProposal(newProposal) {\n    //Ajout d'une nouvelle proposition'\n    document.getElementById('whiteliste').rows[ProposalsLigneEnCours].cells[2].innerHTML = newProposal;\n    document.getElementById('whiteliste').rows[ProposalsLigneEnCours].cells[3].innerHTML = ProposalsLigneEnCours;\n    ProposalsLigneEnCours += 1;\n};\n\n\nexport function WinnerSelect() {\n    //Propsition gagnante\n\n    let resultats=[VotersLigneEnCours];\n    for(let i = 1; i < VotersLigneEnCours; i++) {\n      resultats[i] = 0;\n    }\n    for(let i = 1; i < VotersLigneEnCours; i++) {\n      resultats[document.getElementById('whiteliste').rows[i].cells[1].innerHTML] += 1;\n    }\n    let winnerId = 0;\n    let nbVotes = 0;\n    for(let i = 1; i < VotersLigneEnCours; i++) {\n      if(winnerId < resultats[i]) {\n        winnerId = i;\n        nbVotes = resultats[i];\n      }\n    }\n    let i = 1;\n    while(true) {\n      if(parseInt(document.getElementById('whiteliste').rows[i].cells[3].innerHTML) === parseInt(winnerId)){\n        document.getElementById('whiteliste').rows[i].cells[2].style.background = \"green\";\n        document.getElementById('whiteliste').rows[i].cells[2].innerHTML += (\"   ( \" + nbVotes + \" votes)\");\n        break;\n      };\n      i += 1;\n    };    \n};       \n","import { useState , useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport InitDOM from \"../DOM/InitDOM\"\nimport { InitVoters, AjoutVoterTableau , InitProposalsId, AjoutTableauProposal, InitVoted, InitProposalsTxt, WinnerSelect } from \"../DOM/Tableau\";\n\nfunction Contract({ident, titre, userCod}) {\n    const { state: { contract, accounts } } = useEth();\n\n    const [statusId, setStatusId] = useState(0);\n    const [statusTxt, setStatusTxt] = useState(\"\");\n\n    const [newVoter, setnewVoter] = useState(\"\");\n    const [newProposal, setnewProposal] = useState(\"\");\n\n    //bouton status suivant\n    const nextstatus = async e => {\n      switch(parseInt(statusId)) {\n        case 0:\n          try {\n            await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n          } catch (err) {}; break;\n        case 1:\n          try {\n            await contract.methods.endProposalsRegistering().send({ from: accounts[0] });\n          } catch (err) {}; break;\n        case 2:\n          try {\n            await contract.methods.startVotingSession().send({ from: accounts[0] });\n          } catch (err) {}; break;\n        case 3:\n          try {\n            await contract.methods.endVotingSession().send({ from: accounts[0] });\n          } catch (err) {}; break;\n        case 4:\n          try {\n            await contract.methods.tallyVotes().send({ from: accounts[0] });\n            document.getElementById('statusbtn').style.visibility = \"hidden\";\n            WinnerSelect();\n          } catch (err) {}; break;\n        default:\n          break;\n      };\n      window.location.reload(); \n    };\n\n    //champs pour ajouter un participant\n    const writevoterChange = e => {\n      if (/^0x[a-fA-F0-9]{40}$/.test(e.target.value)) { setnewVoter(e.target.value); }\n    };\n    //Bouton pour ajouter un participant\n    const writevoter = async e => {\n      try{\n        await contract.methods.addVoter(newVoter).send({ from: accounts[0] });\n        AjoutVoterTableau(newVoter);\n        setnewVoter(\"\");\n      } catch (err) {}\n    };\n\n    //champs pour ajouter une proposition\n    const writeproposalChange = e => { setnewProposal(e.target.value); };\n    //Bouton pour ajouter une proposition\n    const writeproposal = async e => {\n      try {\n        await contract.methods.addProposal(newProposal).send({ from: accounts[0] });\n        AjoutTableauProposal(newProposal);\n        setnewProposal(\"\");\n      } catch (err) {}\n      document.getElementById('proposal').style.visibility = \"hidden\";\n    };\n\n\n    //Bouton de vote pour une proposition\n    const vote = async e => {\n      try {\n        //Récupérer le numéro de ligne pour déterminer l'Id\n        const VoteProposalId = 1;\n        await contract.methods.setVote(VoteProposalId).send({ from: accounts[0] });\n        //Rechercher l'adresse du User dans le tableau\n        const VoterLigne = 1;\n        document.getElementById('whiteliste').rows[VoterLigne].cells[1].innerHTML = VoteProposalId;\n        //Cacher les boutons\n        document.getElementsByTagName('col')[4].style.visibility = 'collapse';\n      } catch (err) {}\n    };\n  \n\n    useEffect(() => {\n      let laststatus;\n      (async function () {\n          //anciens événements : Changement de status\n          let oldStatus= await contract.getPastEvents('WorkflowStatusChange', {fromBlock: 0, toBlock: 'latest'});\n          let oldiesStatus=[];\n          oldStatus.forEach(event => {\n            oldiesStatus.push(event.returnValues.newStatus);\n          });\n          laststatus = 0;\n          if(oldiesStatus.length > 0) {\n            laststatus = oldiesStatus[oldiesStatus.length - 1]\n          };\n          setStatusId(laststatus);\n  \n          switch(parseInt(laststatus)) {\n            case 0 : setStatusTxt(\"RegisteringVoters\"); break;\n            case 1 : setStatusTxt(\"ProposalsRegistrationStarted\"); break;\n            case 2 : setStatusTxt(\"ProposalsRegistrationEnded\"); break;\n            case 3 : setStatusTxt(\"VotingSessionStarted\"); break;\n            case 4 : setStatusTxt(\"VotingSessionEnded\"); break;\n            case 5 : setStatusTxt(\"VotesTallied\"); break;            \n            default: break;\n          };\n\n  \n          //anciens événements : Chargement des votants existants\n          let oldVoters= await contract.getPastEvents('VoterRegistered', {fromBlock: 0, toBlock: 'latest'});\n          let oldiesVoter=[];\n          oldVoters.forEach(event => {\n            oldiesVoter.push(event.returnValues.voterAddress);\n          });\n          InitVoters(oldiesVoter);\n\n          //anciens événements : Chargement des participants qui ont voté\n          let oldVoted= await contract.getPastEvents('Voted', {fromBlock: 0, toBlock: 'latest'});\n          let oldiesVoted=[];\n          oldVoted.forEach(event => {\n            oldiesVoted.push(event.returnValues.voter);\n            oldiesVoted.push(event.returnValues.proposalId);\n          });\n          InitVoted(oldiesVoted);\n\n          //anciens événements : Chargement des Id des propositions existantes\n          let oldProposals= await contract.getPastEvents('ProposalRegistered', {fromBlock: 0, toBlock: 'latest'});\n          let oldiesProposals=[];\n          oldProposals.forEach(event => {\n            oldiesProposals.push(event.returnValues.proposalId);\n          });\n          InitProposalsId(oldiesProposals);\n\n          //Chargement des propositions existantes\n          const user = document.getElementById('user').textContent;\n          let lstProposals=[];\n          for( let i = 1; i <= oldiesProposals.length; i++){\n            let proposal = await contract.methods.getOneProposal(i).call({ from: user });\n            lstProposals.push(proposal[0]);\n          }\n          InitProposalsTxt(lstProposals);\n\n          if(parseInt(laststatus) === 5) { WinnerSelect(); }\n        }\n      )();\n    }, [contract])  \n  \n    useEffect(() => {\n      InitDOM(userCod, statusId);\n    });\n  \n    return (\n      <>\n        <p>Simple Voting V1.0</p>\n\n        <fieldset id=\"ident\" className=\"inputs\"><legend>Identification...</legend>\n          <div>Adresse de connection :</div>\n          <div id=\"user\">{ident}</div>\n          <div id=\"titre\">{titre}</div>\n        </fieldset>\n\n        <div id=\"votingsession\">\n          <fieldset id=\"status\" className=\"inputs\"><legend>Status en cours...</legend>\n            <strong id=\"statustxt\">{statusTxt}</strong>\n            <button id=\"statusbtn\" onClick={nextstatus}>Etape Suivante</button>\n          </fieldset>\n\n          <fieldset id=\"admin\" className=\"inputs\"><legend>Enregistrement des participants...</legend>\n            <div>Entrer l'adresse du nouveau votant :</div>\n            <input type=\"text\" placeholder=\"new voter\" value={newVoter} onChange={writevoterChange}/>\n            <button className=\"bouton\" onClick={writevoter}>Enregister</button>\n          </fieldset>\n\n          <fieldset id=\"watch\" className=\"inputs\"><legend>Liste d'informations...</legend>\n          <table id=\"whiteliste\">\n            <colgroup>\n              <col width='450px'/> \n              <col />\n              <col />\n              <col />\n              <col />\n            </colgroup>                \n            <thead>\n              <tr><th>Adresse votant</th><th>Vote</th><th>Proposition émise</th><th>Id</th><th className=\"colbtn\"></th></tr>\n            </thead>\n            <tbody>\n              <tr className=\"lignes\"><td></td><td></td><td></td><td></td><td className=\"colbtn\"><button onClick={vote}>Choix</button></td></tr>\n            </tbody>\n          </table>\n          </fieldset>\n\n          <fieldset id=\"proposal\" className=\"inputs\"><legend>Enregistrement d'une proposition...</legend>\n            <div>Entrer la nouvelle proposition :</div>\n            <input type=\"text\" placeholder=\"new proposal\" value={newProposal} onChange={writeproposalChange}/>\n            <button className=\"bouton\" onClick={writeproposal}>Enregister</button>\n          </fieldset>\n        </div>\n      </>\n    )\n  }\n  \n  export default Contract;","import { useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Ident({setIdent, setTitre, setUserCod}) {\n  const { state: { contract, accounts } } = useEth();\n\n  const whoAreYou = async e => {\n    setIdent(accounts[0]);\n    //if User = admin\n    if( accounts[0] === \"0xeF09575d6349ab5275A645337218707c8bD4e5F2\") {\n      try  {\n        await contract.methods.getVoter(accounts[0]).call({ from: accounts[0] });\n        setTitre(\"administrateur\");\n        setUserCod(2);\n        document.getElementById('votingsession').style.visibility = \"visible\";\n      }\n      catch (err) {\n        setTitre(\"administrateur\");\n        setUserCod(1);\n        document.getElementById('votingsession').style.visibility = \"visible\";\n      }\n    } else {\n      //if newUser = votant\n      try  {\n        await contract.methods.getVoter(accounts[0]).call({ from: accounts[0] });\n        setTitre(\"participant\");\n        setUserCod(3);\n        document.getElementById('votingsession').style.visibility = \"visible\";\n      }\n      catch (err) {\n        setTitre(\"inconnu\");\n        setUserCod(4);\n        console.log(\"UserCod = \", 4);\n      }\n    };\n  };\n\n  useEffect(() => {\n    document.getElementById('votingsession').style.visibility = \"hidden\";\n    whoAreYou()\n  });  \n}\nexport default Ident;","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\n\nimport Contract from \"./Contract\";\nimport Ident   from \"./Ident\";\n\nfunction Voting() {\n  const { state } = useEth();\n  const [ident, setIdent] = useState();\n  const [titre, setTitre] = useState(\"\");\n  const [userCod, setUserCod] = useState(\"\");\n\n  return (\n    <div className=\"voting\">\n      {\n      !state.artifact ? <NoticeNoArtifact /> :\n        !state.contract ? <NoticeWrongNetwork /> :\n          <>\n            <div className=\"contract-container\">\n              <Contract ident={ident} titre={titre} userCod={userCod} /> \n              <Ident setIdent={setIdent} setTitre={setTitre} setUserCod={setUserCod}/>\n            </div>\n          </>\n      }\n    </div>\n  );\n}\nexport default Voting;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Voting from \"./components/Voting\";\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <Voting />\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}